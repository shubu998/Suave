cubes:
  - name: line_items
    sql: SELECT * FROM 's3://cube-tutorial/line_items.csv'
    public: false

    joins:
      - name: products
        sql: "{CUBE.product_id} = {products.id}"
        relationship: many_to_one

    dimensions:
      - name: id
        sql: id
        type: number
        primary_key: true

      - name: order_id
        sql: order_id
        type: number
        public: false

      - name: product_id
        sql: product_id
        type: number
        public: false

      # `sql` properties can contain any SQL expressions supported by the data source.
      # Below, the value of the 'price' column is cast to the DECIMAL type
      - name: price
        sql: "price::DECIMAL"
        type: number
        format: currency

    measures:
      - name: count
        type: count

      - name: sum_price
        sql: "{price}"
        type: sum
        public: false

        # This measure calculates the average price of line items.
        # It surely could've been defined in the following, simpler way:
        #   - name: avg_price
        #     sql: "{price}"
        #     type: avg
        # However, for performance, it's better to decompose it into a formula with additive measures.
        # Learn more: https://cube.dev/docs/guides/recipes/query-acceleration/non-additivity
      - name: avg_price
        sql: "{sum_price} / {count}"
        type: number

        # This measure calculates a 'minimum..maximum' price range and renders it as a string.
        # Just like dimensions, measures can have various types, including 'string', 'time', and 'boolean'.
        # Learn more: https://cube.dev/docs/reference/data-model/types-and-formats#measure-types
      - name: price_range
        sql: "FLOOR(MIN({price})) || '..' || CEIL(MAX({price}))"
        type: string

        # This measure calculates the number of products based on the distinct values in the 'product_id' column.
        # Try querying 'line_items.product_count' and 'products.count'; they might yield different results.
        # 'count_distinct_approx' is useful for its trade-off between precision and performance.
        # Learn more: https://cube.dev/docs/reference/data-model/types-and-formats#count_distinct_approx
      - name: product_count
        sql: product_id
        type: count_distinct_approx
